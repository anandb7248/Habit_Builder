{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nvar _jsxFileName = \"/mnt/c/Users/couga/Documents/Github/Habit_Builder/ReactNative/src/components/DatePicker.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  align-items: flex-end;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background: white;\\n  border-radius: 25px;\\n  width: 95%;\\n  height: \", \";\\n  margin: 15px auto;\\n  z-index: 10;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport COLORS from \"../styles/Colors\";\nimport { heightPercentageToDP as hp, widthPercentageToDP as wp } from \"react-native-responsive-screen\";\n\nfunction DatePicker(props) {\n  var topDatePicker = useRef(new Animated.Value(0)).current;\n\n  var show = function show() {\n    Animated.spring(topDatePicker, {\n      toValue: -250\n    }).start();\n  };\n\n  var hide = function hide() {\n    Animated.spring(topDatePicker, {\n      toValue: 100\n    }).start();\n  };\n\n  var dateChange = function dateChange(event, selectedDate) {\n    var currentDate = selectedDate || date;\n    props.onChange(currentDate);\n  };\n\n  useEffect(function () {\n    hide();\n  }, []);\n\n  if (props.show) {\n    show();\n  } else {\n    hide();\n  }\n\n  return React.createElement(AnimatedView, {\n    style: {\n      transform: [{\n        translateY: topDatePicker\n      }]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 5\n    }\n  }, React.createElement(DoneButton, {\n    title: \"Done\",\n    onPress: function onPress() {\n      props.toggle();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }), React.createElement(DateTimePicker, {\n    modalTransparent: true,\n    value: props.date,\n    onChange: dateChange,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default DatePicker;\nvar View = styled.View(_templateObject(), hp(\"25%\"));\nvar DoneButton = styled.Button(_templateObject2());\nvar AnimatedView = Animated.createAnimatedComponent(View);","map":{"version":3,"sources":["/mnt/c/Users/couga/Documents/Github/Habit_Builder/ReactNative/src/components/DatePicker.js"],"names":["React","useState","useRef","useEffect","styled","DateTimePicker","COLORS","heightPercentageToDP","hp","widthPercentageToDP","wp","DatePicker","props","topDatePicker","Animated","Value","current","show","spring","toValue","start","hide","dateChange","event","selectedDate","currentDate","date","onChange","transform","translateY","toggle","View","DoneButton","Button","AnimatedView","createAnimatedComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;;AAEA,OAAOC,MAAP;AACA,SACEC,oBAAoB,IAAIC,EAD1B,EAEEC,mBAAmB,IAAIC,EAFzB,QAGO,gCAHP;;AAKA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAMC,aAAa,GAAGX,MAAM,CAAC,IAAIY,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAApD;;AAEA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBH,IAAAA,QAAQ,CAACI,MAAT,CAAgBL,aAAhB,EAA+B;AAAEM,MAAAA,OAAO,EAAE,CAAC;AAAZ,KAA/B,EAAkDC,KAAlD;AACD,GAFD;;AAIA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBP,IAAAA,QAAQ,CAACI,MAAT,CAAgBL,aAAhB,EAA+B;AAAEM,MAAAA,OAAO,EAAE;AAAX,KAA/B,EAAiDC,KAAjD;AACD,GAFD;;AAIA,MAAME,UAAU,GAAG,SAAbA,UAAa,CAACC,KAAD,EAAQC,YAAR,EAAyB;AAC1C,QAAMC,WAAW,GAAGD,YAAY,IAAIE,IAApC;AACAd,IAAAA,KAAK,CAACe,QAAN,CAAeF,WAAf;AACD,GAHD;;AAKAtB,EAAAA,SAAS,CAAC,YAAM;AACdkB,IAAAA,IAAI;AACL,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIT,KAAK,CAACK,IAAV,EAAgB;AACdA,IAAAA,IAAI;AACL,GAFD,MAEO;AACLI,IAAAA,IAAI;AACL;;AAED,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEO,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,UAAU,EAAEhB;AAAd,OAAD;AAAb,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbD,MAAAA,KAAK,CAACkB,MAAN;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,cAAD;AACE,IAAA,gBAAgB,EAAE,IADpB;AAEE,IAAA,KAAK,EAAElB,KAAK,CAACc,IAFf;AAGE,IAAA,QAAQ,EAAEJ,UAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAeD;;AAED,eAAeX,UAAf;AAEA,IAAMoB,IAAI,GAAG3B,MAAM,CAAC2B,IAAV,oBAIEvB,EAAE,CAAC,KAAD,CAJJ,CAAV;AASA,IAAMwB,UAAU,GAAG5B,MAAM,CAAC6B,MAAV,oBAAhB;AAIA,IAAMC,YAAY,GAAGpB,QAAQ,CAACqB,uBAAT,CAAiCJ,IAAjC,CAArB","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport { Animated } from \"react-native\";\r\nimport COLORS from \"../styles/Colors\";\r\nimport {\r\n  heightPercentageToDP as hp,\r\n  widthPercentageToDP as wp,\r\n} from \"react-native-responsive-screen\";\r\n\r\nfunction DatePicker(props) {\r\n  const topDatePicker = useRef(new Animated.Value(0)).current;\r\n\r\n  const show = () => {\r\n    Animated.spring(topDatePicker, { toValue: -250 }).start();\r\n  };\r\n\r\n  const hide = () => {\r\n    Animated.spring(topDatePicker, { toValue: 100 }).start();\r\n  };\r\n\r\n  const dateChange = (event, selectedDate) => {\r\n    const currentDate = selectedDate || date;\r\n    props.onChange(currentDate);\r\n  };\r\n\r\n  useEffect(() => {\r\n    hide();\r\n  }, []);\r\n\r\n  if (props.show) {\r\n    show();\r\n  } else {\r\n    hide();\r\n  }\r\n\r\n  return (\r\n    <AnimatedView style={{ transform: [{ translateY: topDatePicker }] }}>\r\n      <DoneButton\r\n        title=\"Done\"\r\n        onPress={() => {\r\n          props.toggle();\r\n        }}\r\n      ></DoneButton>\r\n      <DateTimePicker\r\n        modalTransparent={true}\r\n        value={props.date}\r\n        onChange={dateChange}\r\n      />\r\n    </AnimatedView>\r\n  );\r\n}\r\n\r\nexport default DatePicker;\r\n\r\nconst View = styled.View`\r\n  background: white;\r\n  border-radius: 25px;\r\n  width: 95%;\r\n  height: ${hp(\"25%\")};\r\n  margin: 15px auto;\r\n  z-index: 10;\r\n`;\r\n\r\nconst DoneButton = styled.Button`\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst AnimatedView = Animated.createAnimatedComponent(View);\r\n"]},"metadata":{},"sourceType":"module"}