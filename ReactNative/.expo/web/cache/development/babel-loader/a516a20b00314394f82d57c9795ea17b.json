{"ast":null,"code":"import _taggedTemplateLiteralLoose from \"@babel/runtime/helpers/taggedTemplateLiteralLoose\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/mnt/c/Users/couga/Documents/Github/Habit_Builder/ReactNative/src/components/TimePicker.js\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  align-items: flex-end;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteralLoose([\"\\n  background: white;\\n  border-radius: 25px;\\n  width: 95%;\\n  height: 300px;\\n  margin: 15px auto;\\n  z-index: 10;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useRef, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\n\nfunction TimePicker(props) {\n  var topTimePicker = useRef(new Animated.Value(0)).current;\n\n  var _useState = useState(new Date()),\n      _useState2 = _slicedToArray(_useState, 2),\n      date = _useState2[0],\n      setDate = _useState2[1];\n\n  var show = function show() {\n    Animated.spring(topTimePicker, {\n      toValue: -250\n    }).start();\n  };\n\n  var hide = function hide() {\n    Animated.spring(topTimePicker, {\n      toValue: 100\n    }).start();\n  };\n\n  var setTime = function setTime(event, date) {\n    if (date !== undefined) {}\n  };\n\n  useEffect(function () {\n    hide();\n  }, []);\n\n  if (props.show) {\n    show();\n  } else {\n    hide();\n  }\n\n  return React.createElement(AnimatedView, {\n    style: {\n      transform: [{\n        translateY: topTimePicker\n      }]\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, React.createElement(DoneButton, {\n    title: \"Done\",\n    onPress: function onPress() {\n      props.toggle();\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), React.createElement(DateTimePicker, {\n    modalTransparent: true,\n    value: date,\n    mode: \"time\",\n    onChange: setTime,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default TimePicker;\nvar View = styled.View(_templateObject());\nvar DoneButton = styled.Button(_templateObject2());\nvar AnimatedView = Animated.createAnimatedComponent(View);","map":{"version":3,"sources":["/mnt/c/Users/couga/Documents/Github/Habit_Builder/ReactNative/src/components/TimePicker.js"],"names":["React","useState","useRef","useEffect","styled","DateTimePicker","TimePicker","props","topTimePicker","Animated","Value","current","Date","date","setDate","show","spring","toValue","start","hide","setTime","event","undefined","transform","translateY","toggle","View","DoneButton","Button","AnimatedView","createAnimatedComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,MAA1B,EAAkCC,SAAlC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,cAAP,MAA2B,wCAA3B;;;AAGA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AACzB,MAAMC,aAAa,GAAGN,MAAM,CAAC,IAAIO,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAD,CAAN,CAA8BC,OAApD;;AADyB,kBAEDV,QAAQ,CAAC,IAAIW,IAAJ,EAAD,CAFP;AAAA;AAAA,MAElBC,IAFkB;AAAA,MAEZC,OAFY;;AAIzB,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBN,IAAAA,QAAQ,CAACO,MAAT,CAAgBR,aAAhB,EAA+B;AAAES,MAAAA,OAAO,EAAE,CAAC;AAAZ,KAA/B,EAAkDC,KAAlD;AACD,GAFD;;AAGA,MAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjBV,IAAAA,QAAQ,CAACO,MAAT,CAAgBR,aAAhB,EAA+B;AAAES,MAAAA,OAAO,EAAE;AAAX,KAA/B,EAAiDC,KAAjD;AACD,GAFD;;AAIA,MAAME,OAAO,GAAG,SAAVA,OAAU,CAACC,KAAD,EAAQR,IAAR,EAAiB;AAC/B,QAAIA,IAAI,KAAKS,SAAb,EAAwB,CAEvB;AACF,GAJD;;AAMAnB,EAAAA,SAAS,CAAC,YAAM;AACdgB,IAAAA,IAAI;AACL,GAFQ,EAEN,EAFM,CAAT;;AAIA,MAAIZ,KAAK,CAACQ,IAAV,EAAgB;AACdA,IAAAA,IAAI;AACL,GAFD,MAEO;AACLI,IAAAA,IAAI;AACL;;AAED,SACE,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEI,MAAAA,SAAS,EAAE,CAAC;AAAEC,QAAAA,UAAU,EAAEhB;AAAd,OAAD;AAAb,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAC,MADR;AAEE,IAAA,OAAO,EAAE,mBAAM;AACbD,MAAAA,KAAK,CAACkB,MAAN;AACD,KAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE,oBAAC,cAAD;AACE,IAAA,gBAAgB,EAAE,IADpB;AAEE,IAAA,KAAK,EAAEZ,IAFT;AAGE,IAAA,IAAI,EAAE,MAHR;AAIE,IAAA,QAAQ,EAAEO,OAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAgBD;;AAED,eAAed,UAAf;AAEA,IAAMoB,IAAI,GAAGtB,MAAM,CAACsB,IAAV,mBAAV;AASA,IAAMC,UAAU,GAAGvB,MAAM,CAACwB,MAAV,oBAAhB;AAIA,IAAMC,YAAY,GAAGpB,QAAQ,CAACqB,uBAAT,CAAiCJ,IAAjC,CAArB","sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport { Animated } from \"react-native\";\r\n\r\nfunction TimePicker(props) {\r\n  const topTimePicker = useRef(new Animated.Value(0)).current;\r\n  const [date, setDate] = useState(new Date());\r\n\r\n  const show = () => {\r\n    Animated.spring(topTimePicker, { toValue: -250 }).start();\r\n  };\r\n  const hide = () => {\r\n    Animated.spring(topTimePicker, { toValue: 100 }).start();\r\n  };\r\n\r\n  const setTime = (event, date) => {\r\n    if (date !== undefined) {\r\n      // Use the hour and minute from the date object\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    hide();\r\n  }, []);\r\n\r\n  if (props.show) {\r\n    show();\r\n  } else {\r\n    hide();\r\n  }\r\n\r\n  return (\r\n    <AnimatedView style={{ transform: [{ translateY: topTimePicker }] }}>\r\n      <DoneButton\r\n        title=\"Done\"\r\n        onPress={() => {\r\n          props.toggle();\r\n        }}\r\n      ></DoneButton>\r\n      <DateTimePicker\r\n        modalTransparent={true}\r\n        value={date}\r\n        mode={\"time\"}\r\n        onChange={setTime}\r\n      />\r\n    </AnimatedView>\r\n  );\r\n}\r\n\r\nexport default TimePicker;\r\n\r\nconst View = styled.View`\r\n  background: white;\r\n  border-radius: 25px;\r\n  width: 95%;\r\n  height: 300px;\r\n  margin: 15px auto;\r\n  z-index: 10;\r\n`;\r\n\r\nconst DoneButton = styled.Button`\r\n  align-items: flex-end;\r\n`;\r\n\r\nconst AnimatedView = Animated.createAnimatedComponent(View);\r\n"]},"metadata":{},"sourceType":"module"}