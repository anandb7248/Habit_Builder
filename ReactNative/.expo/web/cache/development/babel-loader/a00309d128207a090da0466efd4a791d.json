{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { LOGIN_REQUEST, LOGIN_SUCCESS, LOGIN_FAILURE, LOGOUT_REQUEST, LOGOUT_SUCCESS, LOGOUT_FAILURE, VERIFY_SUCCESS, VERIFY_REQUEST } from \"../actions/Types\";\nvar InitAuthState = {\n  isLoggingIn: false,\n  isLoggingOut: false,\n  isVerifying: false,\n  loginError: false,\n  logoutError: false,\n  isAuthenticated: false,\n  user: {}\n};\n\nvar AuthReducer = function AuthReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : InitAuthState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOGOUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: true,\n        loginError: false\n      });\n\n    case LOGIN_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isAuthenticated: true,\n        user: action.user\n      });\n\n    case LOGIN_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingIn: false,\n        isAuthenticated: false,\n        loginError: true\n      });\n\n    case LOGOUT_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: true,\n        logoutError: false\n      });\n\n    case LOGOUT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        isAuthenticated: false,\n        user: {}\n      });\n\n    case LOGOUT_FAILURE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isLoggingOut: false,\n        logoutError: true\n      });\n\n    case VERIFY_REQUEST:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isVerifying: true,\n        verifyingError: false\n      });\n\n    case VERIFY_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isVerifying: false\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default AuthReducer;","map":{"version":3,"sources":["/mnt/c/Users/couga/Documents/Github/Habit_Builder/ReactNative/src/redux/reducers/Auth.js"],"names":["LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","VERIFY_SUCCESS","VERIFY_REQUEST","InitAuthState","isLoggingIn","isLoggingOut","isVerifying","loginError","logoutError","isAuthenticated","user","AuthReducer","state","action","type","verifyingError"],"mappings":";;;;;;AAAA,SACIA,aADJ,EAEIC,aAFJ,EAGIC,aAHJ,EAIIC,cAJJ,EAKIC,cALJ,EAMIC,cANJ,EAOIC,cAPJ,EAQIC,cARJ;AAYA,IAAMC,aAAa,GAAG;AAClBC,EAAAA,WAAW,EAAE,KADK;AAElBC,EAAAA,YAAY,EAAE,KAFI;AAGlBC,EAAAA,WAAW,EAAE,KAHK;AAIlBC,EAAAA,UAAU,EAAE,KAJM;AAKlBC,EAAAA,WAAW,EAAE,KALK;AAMlBC,EAAAA,eAAe,EAAE,KANC;AAOlBC,EAAAA,IAAI,EAAE;AAPY,CAAtB;;AAUA,IAAMC,WAAW,GAAG,SAAdA,WAAc,GAAmC;AAAA,MAAlCC,KAAkC,uEAA1BT,aAA0B;AAAA,MAAXU,MAAW;;AACnD,UAAOA,MAAM,CAACC,IAAd;AAOI,SAAKhB,cAAL;AACI,6CACOc,KADP;AAEIR,QAAAA,WAAW,EAAE,IAFjB;AAGIG,QAAAA,UAAU,EAAE;AAHhB;;AAKJ,SAAKX,aAAL;AACI,6CACOgB,KADP;AAEIR,QAAAA,WAAW,EAAE,KAFjB;AAGIK,QAAAA,eAAe,EAAE,IAHrB;AAIIC,QAAAA,IAAI,EAAEG,MAAM,CAACH;AAJjB;;AAMJ,SAAKb,aAAL;AACI,6CACOe,KADP;AAEIR,QAAAA,WAAW,EAAE,KAFjB;AAGIK,QAAAA,eAAe,EAAE,KAHrB;AAIIF,QAAAA,UAAU,EAAE;AAJhB;;AAMJ,SAAKT,cAAL;AACI,6CACOc,KADP;AAEIP,QAAAA,YAAY,EAAE,IAFlB;AAGIG,QAAAA,WAAW,EAAE;AAHjB;;AAKJ,SAAKT,cAAL;AACI,6CACOa,KADP;AAEIP,QAAAA,YAAY,EAAE,KAFlB;AAGII,QAAAA,eAAe,EAAE,KAHrB;AAIIC,QAAAA,IAAI,EAAE;AAJV;;AAMJ,SAAKV,cAAL;AACI,6CACOY,KADP;AAEIP,QAAAA,YAAY,EAAE,KAFlB;AAGIG,QAAAA,WAAW,EAAE;AAHjB;;AAKJ,SAAKN,cAAL;AACI,6CACOU,KADP;AAEIN,QAAAA,WAAW,EAAE,IAFjB;AAGIS,QAAAA,cAAc,EAAE;AAHpB;;AAKJ,SAAKd,cAAL;AACI,6CACOW,KADP;AAEIN,QAAAA,WAAW,EAAE;AAFjB;;AAIJ;AACI,aAAOM,KAAP;AA1DR;AA4DH,CA7DD;;AA+DA,eAAeD,WAAf","sourcesContent":["import {\r\n    LOGIN_REQUEST, \r\n    LOGIN_SUCCESS, \r\n    LOGIN_FAILURE,\r\n    LOGOUT_REQUEST,\r\n    LOGOUT_SUCCESS,\r\n    LOGOUT_FAILURE,\r\n    VERIFY_SUCCESS,\r\n    VERIFY_REQUEST,\r\n  } from \"../actions/Types\";\r\n\r\n/* Initial Login state to build from */\r\nconst InitAuthState = {\r\n    isLoggingIn: false,\r\n    isLoggingOut: false,\r\n    isVerifying: false,\r\n    loginError: false,\r\n    logoutError: false,\r\n    isAuthenticated: false,\r\n    user: {}\r\n}\r\n\r\nconst AuthReducer = (state = InitAuthState, action) => {\r\n    switch(action.type) {\r\n        /*\r\n            On each parsed action request type, the reducer will return the\r\n            new modified state. The spread operator '...' will return the insides of the old\r\n            state which we then append our corresponding changed state values to. Altogether returning\r\n            a new state object. \r\n        */\r\n        case LOGOUT_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoggingIn: true,\r\n                loginError: false\r\n            };\r\n        case LOGIN_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isAuthenticated: true,\r\n                user: action.user\r\n            };\r\n        case LOGIN_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                isAuthenticated: false,\r\n                loginError: true\r\n            }\r\n        case LOGOUT_REQUEST:\r\n            return {\r\n                ...state,\r\n                isLoggingOut: true,\r\n                logoutError: false\r\n            };\r\n        case LOGOUT_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isLoggingOut: false,\r\n                isAuthenticated: false,\r\n                user: {}\r\n            };\r\n        case LOGOUT_FAILURE:\r\n            return {\r\n                ...state,\r\n                isLoggingOut: false,\r\n                logoutError: true\r\n            };\r\n        case VERIFY_REQUEST:\r\n            return {\r\n                ...state,\r\n                isVerifying: true,\r\n                verifyingError: false\r\n            };\r\n        case VERIFY_SUCCESS:\r\n            return {\r\n                ...state,\r\n                isVerifying: false\r\n            };\r\n        default: \r\n            return state;\r\n    }\r\n}\r\n\r\nexport default AuthReducer;"]},"metadata":{},"sourceType":"module"}